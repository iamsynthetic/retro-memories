{"ast":null,"code":"var _jsxFileName = \"/Users/tomo/Documents/code/projects/react/retro-memories/src/NavContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NavContext = /*#__PURE__*/createContext();\nexport function NavProvider({\n  children\n}) {\n  _s();\n  const [currentnav, setNav] = useState({\n    navname: 'default',\n    waittime: 0\n  });\n\n  // const [currentnav, setNav] = useState([])\n  let thenavname = '';\n  let thewaittime = 0;\n  const changenav = (navname, waittime) => {\n    console.log('setstate - currentnav.navname is: ' + currentnav.navname);\n    console.log('setstate - currentnav.waittime is: ' + currentnav.waittime);\n    setNav(prevState => [...prevState, {\n      navname,\n      waittime\n    }]);\n    console.log('currentnav is: ' + currentnav);\n    console.log('currentnav.navname is: ' + currentnav.navname);\n    console.log('currentnav.waittime is: ' + currentnav.waittime);\n\n    // console.log('---- check navname and waittime parameters -----')\n    // console.log('typeof navname parameter is: ' + typeof(navname))\n    // console.log('typeof waittime parameter is: ' + typeof(waittime))\n    // console.log('navnmae is: ' + navname)\n    // console.log('waittime is: ' + waittime)\n\n    // console.log('\\n')\n\n    // console.log('---- check thenavname and thewaittime parameters -----')\n    // console.log('typeof thenavname string is: ' + typeof(thenavname))\n    // console.log('typeof thewaittime string is: ' + typeof(thewaittime))\n    // console.log('thenavname is: ' + thenavname)\n    // console.log('thewaittime is: ' + thewaittime)\n\n    // console.log('\\n')\n\n    // console.log('---- check currentnav.navname and currentnav.waittime parameters -----')\n    // console.log('typeof currentnav.navname is: ' + typeof(currentnav.navname))\n    // console.log('typeof currentnav.waittime is: ' + typeof(currentnav.waittime))\n    // console.log('currentnav.navname is: ' + currentnav.navname)\n    // console.log('currentnav.waittime is: ' + currentnav.waittime)\n\n    // console.log('\\n')\n\n    // console.log('---- thenavname and thewaittime are being set to the parameters recieved now ---- ')\n    // thenavname = navname;\n    // thewaittime = waittime;\n\n    // console.log('\\n')\n\n    // console.log('---- check what thenavname and thewaittime are now -----')\n    // console.log('typeof thenavname is: ' + typeof(thenavname))\n    // console.log('typeof thewaittime is: ' + typeof(thewaittime))\n    // console.log('thenavname is: ' + thenavname)\n    // console.log('thewaittime is: ' + thewaittime)\n\n    // console.log('\\n')\n\n    // console.log('---- setnav is being set to be thenavname and thewaittime now ---- ')\n    // setNav(currentnav.navname = thenavname, currentnav.waittime = thewaittime)\n\n    // console.log('\\n')\n\n    // console.log('---- check what currentnav.navname and currentnav.waittime are now -----')\n    // console.log('typeof currentnav.navname parameter is: ' + typeof(currentnav.navname))\n    // console.log('typeof currentnav.waittime parameter is: ' + typeof(currentnav.waittime))\n    // console.log('currentnav.navname is: ' + currentnav.navname)\n    // console.log('currentnav.waittime is: ' + currentnav.waittime)\n\n    // console.log('\\n')\n  };\n\n  return /*#__PURE__*/_jsxDEV(NavContext.Provider, {\n    value: {\n      currentnav,\n      changenav\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n_s(NavProvider, \"Qi01FnUXD342VdpBr+hVaPnPGKc=\");\n_c = NavProvider;\nexport default NavContext;\n\n//nav context is like redux but in the opposite, you import this into whatever other component\n//you want to use this data.\n\n//right now the main nav calls changenav and sets the navname to whatever was clicked, and\n//also sets the waittime to whatever is set in mainnav\n\n//then the other 'sections' (components like about, projects etc) also import this component\n//and call the currentnav state to find out what it currently is, based off this they should\n//be able to wait for however long the waittime is until they animate in. that's the plan.\nvar _c;\n$RefreshReg$(_c, \"NavProvider\");","map":{"version":3,"names":["createContext","useState","jsxDEV","_jsxDEV","NavContext","NavProvider","children","_s","currentnav","setNav","navname","waittime","thenavname","thewaittime","changenav","console","log","prevState","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tomo/Documents/code/projects/react/retro-memories/src/NavContext.js"],"sourcesContent":["import { createContext, useState } from \"react\";\n\nconst NavContext = createContext();\n\nexport function NavProvider({children}){\n\n    const [currentnav, setNav] = useState({ navname: 'default', waittime: 0 })\n\n    // const [currentnav, setNav] = useState([])\n    let thenavname = ''\n    let thewaittime = 0\n\n    const changenav = (navname, waittime) => {\n\n        console.log('setstate - currentnav.navname is: ' + currentnav.navname)\n        console.log('setstate - currentnav.waittime is: ' + currentnav.waittime)\n\n\n        setNav((prevState) => [...prevState, {navname, waittime}])\n\n        console.log('currentnav is: ' + currentnav)\n        console.log('currentnav.navname is: ' + currentnav.navname)\n        console.log('currentnav.waittime is: ' + currentnav.waittime)\n\n        // console.log('---- check navname and waittime parameters -----')\n        // console.log('typeof navname parameter is: ' + typeof(navname))\n        // console.log('typeof waittime parameter is: ' + typeof(waittime))\n        // console.log('navnmae is: ' + navname)\n        // console.log('waittime is: ' + waittime)\n        \n        // console.log('\\n')\n\n        // console.log('---- check thenavname and thewaittime parameters -----')\n        // console.log('typeof thenavname string is: ' + typeof(thenavname))\n        // console.log('typeof thewaittime string is: ' + typeof(thewaittime))\n        // console.log('thenavname is: ' + thenavname)\n        // console.log('thewaittime is: ' + thewaittime)\n        \n        // console.log('\\n')\n\n        // console.log('---- check currentnav.navname and currentnav.waittime parameters -----')\n        // console.log('typeof currentnav.navname is: ' + typeof(currentnav.navname))\n        // console.log('typeof currentnav.waittime is: ' + typeof(currentnav.waittime))\n        // console.log('currentnav.navname is: ' + currentnav.navname)\n        // console.log('currentnav.waittime is: ' + currentnav.waittime)\n\n        // console.log('\\n')\n        \n        // console.log('---- thenavname and thewaittime are being set to the parameters recieved now ---- ')\n        // thenavname = navname;\n        // thewaittime = waittime;\n        \n        // console.log('\\n')\n        \n        // console.log('---- check what thenavname and thewaittime are now -----')\n        // console.log('typeof thenavname is: ' + typeof(thenavname))\n        // console.log('typeof thewaittime is: ' + typeof(thewaittime))\n        // console.log('thenavname is: ' + thenavname)\n        // console.log('thewaittime is: ' + thewaittime)\n\n        // console.log('\\n')\n        \n        // console.log('---- setnav is being set to be thenavname and thewaittime now ---- ')\n        // setNav(currentnav.navname = thenavname, currentnav.waittime = thewaittime)\n\n        // console.log('\\n')\n       \n        // console.log('---- check what currentnav.navname and currentnav.waittime are now -----')\n        // console.log('typeof currentnav.navname parameter is: ' + typeof(currentnav.navname))\n        // console.log('typeof currentnav.waittime parameter is: ' + typeof(currentnav.waittime))\n        // console.log('currentnav.navname is: ' + currentnav.navname)\n        // console.log('currentnav.waittime is: ' + currentnav.waittime)\n\n        // console.log('\\n')\n    }\n    return(\n        <NavContext.Provider value={{currentnav, changenav}}>\n            {children}\n        </NavContext.Provider>\n    )\n}\nexport default NavContext;\n\n\n//nav context is like redux but in the opposite, you import this into whatever other component\n//you want to use this data.\n\n//right now the main nav calls changenav and sets the navname to whatever was clicked, and\n//also sets the waittime to whatever is set in mainnav\n\n//then the other 'sections' (components like about, projects etc) also import this component\n//and call the currentnav state to find out what it currently is, based off this they should\n//be able to wait for however long the waittime is until they animate in. that's the plan."],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,UAAU,gBAAGJ,aAAa,CAAC,CAAC;AAElC,OAAO,SAASK,WAAWA,CAAC;EAACC;AAAQ,CAAC,EAAC;EAAAC,EAAA;EAEnC,MAAM,CAACC,UAAU,EAAEC,MAAM,CAAC,GAAGR,QAAQ,CAAC;IAAES,OAAO,EAAE,SAAS;IAAEC,QAAQ,EAAE;EAAE,CAAC,CAAC;;EAE1E;EACA,IAAIC,UAAU,GAAG,EAAE;EACnB,IAAIC,WAAW,GAAG,CAAC;EAEnB,MAAMC,SAAS,GAAGA,CAACJ,OAAO,EAAEC,QAAQ,KAAK;IAErCI,OAAO,CAACC,GAAG,CAAC,oCAAoC,GAAGR,UAAU,CAACE,OAAO,CAAC;IACtEK,OAAO,CAACC,GAAG,CAAC,qCAAqC,GAAGR,UAAU,CAACG,QAAQ,CAAC;IAGxEF,MAAM,CAAEQ,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAE;MAACP,OAAO;MAAEC;IAAQ,CAAC,CAAC,CAAC;IAE1DI,OAAO,CAACC,GAAG,CAAC,iBAAiB,GAAGR,UAAU,CAAC;IAC3CO,OAAO,CAACC,GAAG,CAAC,yBAAyB,GAAGR,UAAU,CAACE,OAAO,CAAC;IAC3DK,OAAO,CAACC,GAAG,CAAC,0BAA0B,GAAGR,UAAU,CAACG,QAAQ,CAAC;;IAE7D;IACA;IACA;IACA;IACA;;IAEA;;IAEA;IACA;IACA;IACA;IACA;;IAEA;;IAEA;IACA;IACA;IACA;IACA;;IAEA;;IAEA;IACA;IACA;;IAEA;;IAEA;IACA;IACA;IACA;IACA;;IAEA;;IAEA;IACA;;IAEA;;IAEA;IACA;IACA;IACA;IACA;;IAEA;EACJ,CAAC;;EACD,oBACIR,OAAA,CAACC,UAAU,CAACc,QAAQ;IAACC,KAAK,EAAE;MAACX,UAAU;MAAEM;IAAS,CAAE;IAAAR,QAAA,EAC/CA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAE9B;AAAChB,EAAA,CA5EeF,WAAW;AAAAmB,EAAA,GAAXnB,WAAW;AA6E3B,eAAeD,UAAU;;AAGzB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}