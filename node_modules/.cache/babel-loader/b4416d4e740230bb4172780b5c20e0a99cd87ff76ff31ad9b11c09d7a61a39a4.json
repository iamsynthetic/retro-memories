{"ast":null,"code":"var _jsxFileName = \"/Users/tomo/Documents/code/projects/react/retro-memories/src/NavContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NavContext = /*#__PURE__*/createContext();\nexport function NavProvider({\n  children\n}) {\n  _s();\n  const [currentnav, setNav] = useState({\n    navname: 'default',\n    waittime: 0\n  });\n  let thenavname = '';\n  let thewaittime = 0;\n  const changenav = (navname, waittime) => {\n    console.log('---- check navname and waittime parameters -----');\n    console.log('typeof navname parameter is: ' + typeof navname);\n    console.log('typeof waittime parameter is: ' + typeof waittime);\n    console.log('navnmae is: ' + navname);\n    console.log('waittime is: ' + waittime);\n    console.log('\\n');\n    console.log('---- check thenavname and thewaittime parameters -----');\n    console.log('typeof thenavname string is: ' + typeof thenavname);\n    console.log('typeof thewaittime string is: ' + typeof thewaittime);\n    console.log('thenavname is: ' + thenavname);\n    console.log('thewaittime is: ' + thewaittime);\n    console.log('\\n');\n    console.log('---- check currentnav.navname and currentnav.waittime parameters -----');\n    console.log('typeof currentnav.navname is: ' + typeof currentnav.navname);\n    console.log('typeof currentnav.waittime is: ' + typeof currentnav.waittime);\n    console.log('currentnav.navname is: ' + currentnav.navname);\n    console.log('currentnav.waittime is: ' + currentnav.waittime);\n    console.log('\\n');\n    console.log('---- thenavname and thewaittime are being set to the parameters recieved now ---- ');\n    thenavname = navname;\n    thewaittime = waittime;\n    console.log('\\n');\n    console.log('---- check what thenavname and thewaittime are now -----');\n    console.log('typeof thenavname is: ' + typeof thenavname);\n    console.log('typeof thewaittime is: ' + typeof thewaittime);\n    console.log('thenavname is: ' + thenavname);\n    console.log('thewaittime is: ' + thewaittime);\n    console.log('\\n');\n    console.log('---- setnav is being set to be thenavname and thewaittime now ---- ');\n    setNav(currentnav.navname = thenavname, currentnav.waittime = thewaittime);\n    console.log('\\n');\n    console.log('---- check what currentnav.navname and currentnav.waittime are now -----');\n    console.log('typeof currentnav.navname parameter is: ' + typeof currentnav.navname);\n    console.log('typeof currentnav.waittime parameter is: ' + typeof currentnav.waittime);\n    console.log('currentnav.navname is: ' + currentnav.navname);\n    console.log('currentnav.waittime is: ' + currentnav.waittime);\n    console.log('\\n');\n\n    // console.log('navname is: ' + navname)\n    // console.log('waittime is: ' + waittime)\n    // console.log('changenav - navname is: ' + navname)\n    // console.log('changenav - waittime is: ' + waittime)\n    // console.log('setnav.navname is: ' + currentnav.navname)\n    // console.log('setnav.waittime is: ' + currentnav.waittime)\n    // console.log('currentnav is: ' + currentnav)\n  };\n\n  return /*#__PURE__*/_jsxDEV(NavContext.Provider, {\n    value: {\n      currentnav,\n      changenav\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n_s(NavProvider, \"Qi01FnUXD342VdpBr+hVaPnPGKc=\");\n_c = NavProvider;\nexport default NavContext;\n\n//nav context is like redux but in the opposite, you import this into whatever other component\n//you want to use this data.\n\n//right now the main nav calls changenav and sets the navname to whatever was clicked, and\n//also sets the waittime to whatever is set in mainnav\n\n//then the other 'sections' (components like about, projects etc) also import this component\n//and call the currentnav state to find out what it currently is, based off this they should\n//be able to wait for however long the waittime is until they animate in. that's the plan.\nvar _c;\n$RefreshReg$(_c, \"NavProvider\");","map":{"version":3,"names":["createContext","useState","jsxDEV","_jsxDEV","NavContext","NavProvider","children","_s","currentnav","setNav","navname","waittime","thenavname","thewaittime","changenav","console","log","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tomo/Documents/code/projects/react/retro-memories/src/NavContext.js"],"sourcesContent":["import { createContext, useState } from \"react\";\n\nconst NavContext = createContext();\n\nexport function NavProvider({children}){\n\n    const [currentnav, setNav] = useState({ navname: 'default', waittime: 0 })\n\n    let thenavname = ''\n    let thewaittime = 0\n\n    const changenav = (navname, waittime) => {\n        console.log('---- check navname and waittime parameters -----')\n        console.log('typeof navname parameter is: ' + typeof(navname))\n        console.log('typeof waittime parameter is: ' + typeof(waittime))\n        console.log('navnmae is: ' + navname)\n        console.log('waittime is: ' + waittime)\n        \n        console.log('\\n')\n\n        console.log('---- check thenavname and thewaittime parameters -----')\n        console.log('typeof thenavname string is: ' + typeof(thenavname))\n        console.log('typeof thewaittime string is: ' + typeof(thewaittime))\n        console.log('thenavname is: ' + thenavname)\n        console.log('thewaittime is: ' + thewaittime)\n        \n        console.log('\\n')\n\n        console.log('---- check currentnav.navname and currentnav.waittime parameters -----')\n        console.log('typeof currentnav.navname is: ' + typeof(currentnav.navname))\n        console.log('typeof currentnav.waittime is: ' + typeof(currentnav.waittime))\n        console.log('currentnav.navname is: ' + currentnav.navname)\n        console.log('currentnav.waittime is: ' + currentnav.waittime)\n\n        console.log('\\n')\n        \n        console.log('---- thenavname and thewaittime are being set to the parameters recieved now ---- ')\n        thenavname = navname;\n        thewaittime = waittime;\n        \n        console.log('\\n')\n        \n        console.log('---- check what thenavname and thewaittime are now -----')\n        console.log('typeof thenavname is: ' + typeof(thenavname))\n        console.log('typeof thewaittime is: ' + typeof(thewaittime))\n        console.log('thenavname is: ' + thenavname)\n        console.log('thewaittime is: ' + thewaittime)\n\n        console.log('\\n')\n        \n        console.log('---- setnav is being set to be thenavname and thewaittime now ---- ')\n        setNav(currentnav.navname = thenavname, currentnav.waittime = thewaittime)\n\n        console.log('\\n')\n       \n        console.log('---- check what currentnav.navname and currentnav.waittime are now -----')\n        console.log('typeof currentnav.navname parameter is: ' + typeof(currentnav.navname))\n        console.log('typeof currentnav.waittime parameter is: ' + typeof(currentnav.waittime))\n        console.log('currentnav.navname is: ' + currentnav.navname)\n        console.log('currentnav.waittime is: ' + currentnav.waittime)\n\n        console.log('\\n')\n        \n        // console.log('navname is: ' + navname)\n        // console.log('waittime is: ' + waittime)\n        // console.log('changenav - navname is: ' + navname)\n        // console.log('changenav - waittime is: ' + waittime)\n        // console.log('setnav.navname is: ' + currentnav.navname)\n        // console.log('setnav.waittime is: ' + currentnav.waittime)\n        // console.log('currentnav is: ' + currentnav)\n    }\n    return(\n        <NavContext.Provider value={{currentnav, changenav}}>\n            {children}\n        </NavContext.Provider>\n    )\n}\nexport default NavContext;\n\n\n//nav context is like redux but in the opposite, you import this into whatever other component\n//you want to use this data.\n\n//right now the main nav calls changenav and sets the navname to whatever was clicked, and\n//also sets the waittime to whatever is set in mainnav\n\n//then the other 'sections' (components like about, projects etc) also import this component\n//and call the currentnav state to find out what it currently is, based off this they should\n//be able to wait for however long the waittime is until they animate in. that's the plan."],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}