{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTitle = exports.useTitle = void 0;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _isNode = _interopRequireDefault(require(\"./isNode\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar currentTitle = '';\n/**\r\n * This hook will set the window title, when a component gets mounted.\r\n * When the component gets unmounted, the previously used title will be restored.\r\n * @param {string} inString\r\n */\n\nvar useTitle = function useTitle(inString) {\n  currentTitle = inString;\n  if (_isNode.default) {\n    return;\n  }\n  _react.default.useEffect(function () {\n    var previousTitle = document.title;\n    document.title = inString;\n    return function () {\n      document.title = previousTitle;\n    };\n  });\n};\n/**\r\n * Returns the current window title to be used in a SSR context\r\n * @returns {string}\r\n */\n\nexports.useTitle = useTitle;\nvar getTitle = function getTitle() {\n  return currentTitle;\n};\nexports.getTitle = getTitle;","map":{"version":3,"names":["_react","_interopRequireDefault","require","_isNode","currentTitle","useTitle","inString","default","useEffect","previousTitle","document","title","getTitle"],"sources":["/Users/tomo/Documents/code/projects/react/retro-memories/node_modules/hookrouter/src/title.js"],"sourcesContent":["import React from 'react';\r\nimport isNode from './isNode';\r\n\r\nlet currentTitle = '';\r\n\r\n/**\r\n * This hook will set the window title, when a component gets mounted.\r\n * When the component gets unmounted, the previously used title will be restored.\r\n * @param {string} inString\r\n */\r\nexport const useTitle = (inString) => {\r\n\tcurrentTitle = inString;\r\n\r\n\tif(isNode){\r\n\t\treturn;\r\n\t}\r\n\r\n\tReact.useEffect(() => {\r\n\t\tconst previousTitle = document.title;\r\n\t\tdocument.title = inString;\r\n\t\treturn () => {\r\n\t\t\tdocument.title = previousTitle;\r\n\t\t};\r\n\t});\r\n};\r\n\r\n/**\r\n * Returns the current window title to be used in a SSR context\r\n * @returns {string}\r\n */\r\nexport const getTitle = () => currentTitle;\r\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,OAAA,GAAAF,sBAAA,CAAAC,OAAA;;;;;;AAEA,IAAIE,YAAY,GAAG,EAAnB;AAEA;;;;;;AAKO,IAAMC,QAAQ,GAAG,SAAXA,QAAWA,CAACC,QAAD,EAAc;EACrCF,YAAY,GAAGE,QAAf;EAEA,IAAGH,OAAA,CAAAI,OAAH,EAAU;IACT;EACA;EAEDP,MAAA,CAAAO,OAAA,CAAMC,SAAN,CAAgB,YAAM;IACrB,IAAMC,aAAa,GAAGC,QAAQ,CAACC,KAA/B;IACAD,QAAQ,CAACC,KAAT,GAAiBL,QAAjB;IACA,OAAO,YAAM;MACZI,QAAQ,CAACC,KAAT,GAAiBF,aAAjB;IACA,CAFD;EAGA,CAND;AAOA,CAdM;AAgBP;;;;;;AAIO,IAAMG,QAAQ,GAAG,SAAXA,QAAWA,CAAA;EAAA,OAAMR,YAAN;AAAA,CAAjB"},"metadata":{},"sourceType":"script","externalDependencies":[]}