{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useInterceptor = exports.interceptRoute = void 0;\nvar _react = _interopRequireDefault(require(\"react\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n  return _arr;\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nvar incrementalId = 1;\nvar interceptors = [];\nvar interceptRoute = function interceptRoute(previousRoute, nextRoute) {\n  if (!interceptors.length) {\n    return nextRoute;\n  }\n  return interceptors.reduceRight(function (nextRoute, interceptor) {\n    return nextRoute === previousRoute ? nextRoute : interceptor.handlerFunction(previousRoute, nextRoute);\n  }, nextRoute);\n};\nexports.interceptRoute = interceptRoute;\nvar get = function get(componentId) {\n  return interceptors.find(function (obj) {\n    return obj.componentId === componentId;\n  }) || null;\n};\nvar remove = function remove(componentId) {\n  var index = interceptors.findIndex(function (obj) {\n    return obj.componentId === componentId;\n  });\n  if (index !== -1) {\n    interceptors.splice(index, 1);\n  }\n};\nvar useInterceptor = function useInterceptor(handlerFunction) {\n  var _React$useState = _react.default.useState(incrementalId++),\n    _React$useState2 = _slicedToArray(_React$useState, 1),\n    componentId = _React$useState2[0];\n  var obj = get(componentId);\n  if (!obj) {\n    obj = {\n      componentId: componentId,\n      stop: function stop() {\n        return remove(componentId);\n      },\n      handlerFunction: handlerFunction\n    };\n    interceptors.unshift(obj);\n  }\n  _react.default.useEffect(function () {\n    return function () {\n      return obj.stop();\n    };\n  }, []);\n  return obj.stop;\n};\nexports.useInterceptor = useInterceptor;","map":{"version":3,"names":["_react","_interopRequireDefault","require","incrementalId","interceptors","interceptRoute","previousRoute","nextRoute","length","reduceRight","interceptor","handlerFunction","get","componentId","find","obj","remove","index","findIndex","splice","useInterceptor","_React$useState","default","useState","_React$useState2","_slicedToArray","stop","unshift","useEffect"],"sources":["../src/interceptor.js"],"sourcesContent":["import React from 'react';\r\n\r\nlet incrementalId = 1;\r\n\r\nconst interceptors = [];\r\n\r\nexport const interceptRoute = (previousRoute, nextRoute) => {\r\n\tif (!interceptors.length) {\r\n\t\treturn nextRoute;\r\n\t}\r\n\r\n\treturn interceptors.reduceRight(\r\n\t\t(nextRoute, interceptor) => nextRoute === previousRoute\r\n\t\t\t? nextRoute\r\n\t\t\t: interceptor.handlerFunction(previousRoute, nextRoute),\r\n\t\tnextRoute\r\n\t);\r\n};\r\n\r\nconst get = (componentId) => interceptors.find(obj => obj.componentId === componentId) || null;\r\nconst remove = (componentId) => {\r\n\tconst index = interceptors.findIndex(obj => obj.componentId === componentId);\r\n\tif (index !== -1) {\r\n\t\tinterceptors.splice(index, 1);\r\n\t}\r\n};\r\n\r\nexport const useInterceptor = (handlerFunction) => {\r\n\tconst [componentId] = React.useState(incrementalId++);\r\n\r\n\tlet obj = get(componentId);\r\n\r\n\tif (!obj) {\r\n\t\tobj = {\r\n\t\t\tcomponentId,\r\n\t\t\tstop: () => remove(componentId),\r\n\t\t\thandlerFunction\r\n\t\t};\r\n\r\n\t\tinterceptors.unshift(obj);\r\n\t}\r\n\r\n\tReact.useEffect(() => () => obj.stop(), []);\r\n\r\n\treturn obj.stop;\r\n};\r\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAIC,aAAa,GAAG,CAApB;AAEA,IAAMC,YAAY,GAAG,EAArB;AAEO,IAAMC,cAAc,GAAG,SAAjBA,cAAiBA,CAACC,aAAD,EAAgBC,SAAhB,EAA8B;EAC3D,IAAI,CAACH,YAAY,CAACI,MAAlB,EAA0B;IACzB,OAAOD,SAAP;EACA;EAED,OAAOH,YAAY,CAACK,WAAb,CACN,UAACF,SAAD,EAAYG,WAAZ;IAAA,OAA4BH,SAAS,KAAKD,aAAd,GACzBC,SADyB,GAEzBG,WAAW,CAACC,eAAZ,CAA4BL,aAA5B,EAA2CC,SAA3C,CAFH;EAAA,CADM,EAINA,SAJM,CAAP;AAMA,CAXM;;AAaP,IAAMK,GAAG,GAAG,SAANA,GAAMA,CAACC,WAAD;EAAA,OAAiBT,YAAY,CAACU,IAAb,CAAkB,UAAAC,GAAG;IAAA,OAAIA,GAAG,CAACF,WAAJ,KAAoBA,WAAxB;EAAA,CAArB,KAA6D,IAA9E;AAAA,CAAZ;AACA,IAAMG,MAAM,GAAG,SAATA,MAASA,CAACH,WAAD,EAAiB;EAC/B,IAAMI,KAAK,GAAGb,YAAY,CAACc,SAAb,CAAuB,UAAAH,GAAG;IAAA,OAAIA,GAAG,CAACF,WAAJ,KAAoBA,WAAxB;EAAA,CAA1B,CAAd;EACA,IAAII,KAAK,KAAK,CAAC,CAAf,EAAkB;IACjBb,YAAY,CAACe,MAAb,CAAoBF,KAApB,EAA2B,CAA3B;EACA;AACD,CALD;AAOO,IAAMG,cAAc,GAAG,SAAjBA,cAAiBA,CAACT,eAAD,EAAqB;EAAA,IAAAU,eAAA,GAC5BrB,MAAA,CAAAsB,OAAA,CAAMC,QAAN,CAAepB,aAAa,EAA5B,CAD4B;IAAAqB,gBAAA,GAAAC,cAAA,CAAAJ,eAAA;IAC3CR,WAD2C,GAAAW,gBAAA;EAGlD,IAAIT,GAAG,GAAGH,GAAG,CAACC,WAAD,CAAb;EAEA,IAAI,CAACE,GAAL,EAAU;IACTA,GAAG,GAAG;MACLF,WAAW,EAAXA,WADK;MAELa,IAAI,EAAE,SAAAA,KAAA;QAAA,OAAMV,MAAM,CAACH,WAAD,CAAZ;MAAA,CAFD;MAGLF,eAAe,EAAfA;IAHK,CAAN;IAMAP,YAAY,CAACuB,OAAb,CAAqBZ,GAArB;EACA;EAEDf,MAAA,CAAAsB,OAAA,CAAMM,SAAN,CAAgB;IAAA,OAAM;MAAA,OAAMb,GAAG,CAACW,IAAJ,EAAN;IAAA,CAAN;EAAA,CAAhB,EAAwC,EAAxC;EAEA,OAAOX,GAAG,CAACW,IAAX;AACA,CAlBM"},"metadata":{},"sourceType":"script","externalDependencies":[]}