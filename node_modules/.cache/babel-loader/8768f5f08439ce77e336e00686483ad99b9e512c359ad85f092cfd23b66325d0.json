{"ast":null,"code":"var _jsxFileName = \"/Users/tomo/Documents/code/projects/react/retro-memories/src/interface/sub-modules/sub-module-container/SubModuleContainer.js\",\n  _s = $RefreshSig$();\nimport { motion, useAnimate } from \"framer-motion\";\nimport estyle from \"./SubModuleContainer.module.scss\";\nimport { useContext, useEffect, useState } from \"react\";\nimport SubModulePress from \"../sub-module-press/SubModulePress\";\nimport SubModuleTestimonials from \"../sub-module-testimonials/SubModuleTestimonials\";\nimport NavContext from \"../../../NavContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SubModuleContainer({\n  props\n}) {\n  _s();\n  // left to do here\n\n  // remove the set timeouts in the useeffect.\n\n  // change them to use usecontext - button click on submodule sets state, use context is sent here and this will listen to it's change, once changed then it'll do the roll up, usecontext will be updated, the submodulepress and testimional will retrieve this and 'load' based on which one is set\n  // the x button here will also send update usecontext once clicked, and submodules will respond to it accordingly\n\n  // import testimonial\n\n  // change bg color\n\n  console.log('sub module container');\n  console.log(props.delay);\n  console.log(props.duration);\n  // const [openMenu, setOpenMenu] = useState(false)\n  // const [closeMenu, setCloseMenu] = useState(false)\n  const [showSubModulePress, setShowSubModulePress] = useState(false);\n  // const [showSubModuleTestimonials, setShowSubModuleTestimonials] = useState(false)\n\n  const {\n    submodules\n  } = useContext(NavContext);\n  const {\n    changesubmodule\n  } = useContext(NavContext);\n  const [scope, animate] = useAnimate();\n\n  //to use the animate it seems like you have to have the style properties you want to animate set on the element and not in a css file\n  //you also appear to need your animations to be asyncronous\n  //make sure you don't have comma's at the end of your animation lines\n\n  async function openpanel() {\n    await animate(\"#containerid\", {\n      height: \"547px\",\n      y: -410\n    }, {\n      duration: .5\n    });\n    // await animate(\"#pressid\", { opacity:1 })\n    // await animate(\"#closeid\", { opacity:1 })\n  }\n\n  async function closepanel() {\n    await animate(\"#pressid\", {\n      opacity: 0\n    });\n    await animate(\"#closeid\", {\n      opacity: 0\n    });\n    await animate(\"#containerid\", {\n      height: \"137px\",\n      y: 0\n    }, {\n      duration: .5\n    });\n  }\n\n  //should setshowmodulepress and the other one here because then the sections will know what to show\n\n  submodules.map(item => {\n    console.log('item.submodule is: ' + item.submodule);\n    if (item.isopen === false) {\n      console.log('submodules - map - panel is opening');\n      openpanel();\n      // setTimeout(() => {        \n      //     changesubmodule(item.submodule, true)\n      // }, 500)\n    } else if (item.isopen === true) {\n      console.log('submodules - map - panel is closing');\n      //closepanel();\n      // setTimeout(() => {        \n      //     changesubmodule(item.submodule, false)\n      // }, 500)\n    }\n  });\n\n  const handleCloseClick = e => {\n    console.log('param is: ' + e);\n    console.log('The link was clicked.');\n    // setOpenMenu(false)\n    // setCloseMenu(true)\n\n    //console.log(e.target.childNodes[0].data.toLowerCase())\n    //changesubmodule(e.target.childNodes[0].data.toLowerCase(), false)\n\n    //     const { currentnav } = useContext(NavContext)\n    // currentnav.map((navitem) => {\n    //     if(navitem.navname === \"about\"){\n    //         console.log('about - navitem navname is:' + navitem.navname)\n    //         console.log('about - navitem waittime is:' + navitem.waittime)\n    //     }\n    //     thedelay = navitem.waittime\n    //     console.log('about - thedelay is : ' + thedelay)\n    // })\n\n    // changenav(e.target.childNodes[0].data.toLowerCase(), waittime)\n  };\n\n  // function updateThatContext()\n  // {\n  //     console.log('updateThatcontext has been called ----------------- *')\n  // }\n\n  // useEffect(() => {\n\n  //     console.log('use effect - sub module container')\n  //     console.log('openMenu is: ' + openMenu)\n  //     if(openMenu === true){\n  //         console.log('use effect - sub module container - openMenu is true')\n  //         openpanel();\n  //         setCloseMenu(true)\n  //     }\n  //     else if(closeMenu === true)\n  //     {\n  //         console.log('use effect - sub module container - openMenu is false')\n  //         closepanel();\n  //         setOpenMenu(true)\n  //     }\n\n  //     console.log('submodules.submodules is: ' + submodules.submodules)\n  //     // if(item.isopen === false)\n  // //     {\n  // //         setOpenMenu(true)\n  // //     }\n\n  //     // if(showSubModulePress === true){\n  //     //     console.log('press should be shown ----------!!!!!!!!<<<<<<')\n  //     // }\n  // }, [openMenu])\n\n  const svgVariants = {\n    ready: {\n      opacity: 0\n    },\n    start: {\n      opacity: 1,\n      transition: {\n        delay: props.delay,\n        duration: props.duration\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: scope,\n    children: /*#__PURE__*/_jsxDEV(motion.div, {\n      id: \"containerid\",\n      className: estyle.container,\n      style: {\n        height: \"137px\",\n        y: 0\n      },\n      variants: svgVariants,\n      initial: \"ready\",\n      animate: \"start\",\n      children: showSubModulePress ? /*#__PURE__*/_jsxDEV(motion.div, {\n        id: \"pressid\",\n        style: {\n          opacity: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: estyle.closebutton,\n          id: \"closeid\",\n          style: {\n            opacity: 0\n          },\n          onClick: e => handleCloseClick(e),\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SubModulePress, {\n          props: {\n            delay: 0,\n            duration: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 9\n  }, this);\n}\n_s(SubModuleContainer, \"jt3+q/tZCpEbfTiWIVfp9O5TRRk=\", false, function () {\n  return [useAnimate];\n});\n_c = SubModuleContainer;\nexport default SubModuleContainer;\nvar _c;\n$RefreshReg$(_c, \"SubModuleContainer\");","map":{"version":3,"names":["motion","useAnimate","estyle","useContext","useEffect","useState","SubModulePress","SubModuleTestimonials","NavContext","jsxDEV","_jsxDEV","SubModuleContainer","props","_s","console","log","delay","duration","showSubModulePress","setShowSubModulePress","submodules","changesubmodule","scope","animate","openpanel","height","y","closepanel","opacity","map","item","submodule","isopen","handleCloseClick","e","svgVariants","ready","start","transition","ref","children","div","id","className","container","style","variants","initial","closebutton","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tomo/Documents/code/projects/react/retro-memories/src/interface/sub-modules/sub-module-container/SubModuleContainer.js"],"sourcesContent":["import { motion, useAnimate } from \"framer-motion\"\nimport estyle from \"./SubModuleContainer.module.scss\"\nimport { useContext, useEffect, useState } from \"react\";\nimport SubModulePress from \"../sub-module-press/SubModulePress\"\nimport SubModuleTestimonials from \"../sub-module-testimonials/SubModuleTestimonials\"\nimport NavContext from \"../../../NavContext\"\n\nfunction SubModuleContainer({props}) {\n    \n\n    // left to do here\n\n    // remove the set timeouts in the useeffect.\n    \n    // change them to use usecontext - button click on submodule sets state, use context is sent here and this will listen to it's change, once changed then it'll do the roll up, usecontext will be updated, the submodulepress and testimional will retrieve this and 'load' based on which one is set\n    // the x button here will also send update usecontext once clicked, and submodules will respond to it accordingly\n\n    // import testimonial\n\n    // change bg color\n\n\n\n    console.log('sub module container')\n    console.log(props.delay)\n    console.log(props.duration)\n    // const [openMenu, setOpenMenu] = useState(false)\n    // const [closeMenu, setCloseMenu] = useState(false)\n    const [showSubModulePress, setShowSubModulePress] = useState(false)\n    // const [showSubModuleTestimonials, setShowSubModuleTestimonials] = useState(false)\n\n    const { submodules } = useContext(NavContext)\n    const { changesubmodule } = useContext(NavContext)\n    const [scope, animate] = useAnimate();\n\n    //to use the animate it seems like you have to have the style properties you want to animate set on the element and not in a css file\n    //you also appear to need your animations to be asyncronous\n    //make sure you don't have comma's at the end of your animation lines\n    \n    async function openpanel() {\n        await animate(\"#containerid\", { height:\"547px\", y:-410 }, {duration:.5 })\n        // await animate(\"#pressid\", { opacity:1 })\n        // await animate(\"#closeid\", { opacity:1 })\n    }\n\n    async function closepanel() {\n        await animate(\"#pressid\", { opacity:0 })\n        await animate(\"#closeid\", { opacity:0 })\n        await animate(\"#containerid\", { height:\"137px\", y:0 }, {duration:.5 })\n    }\n\n\n        //should setshowmodulepress and the other one here because then the sections will know what to show\n\n    submodules.map((item) => {\n        console.log('item.submodule is: ' + item.submodule)\n        if(item.isopen === false)\n        {\n            console.log('submodules - map - panel is opening')\n            openpanel();\n            // setTimeout(() => {        \n            //     changesubmodule(item.submodule, true)\n            // }, 500)\n        }\n        else if(item.isopen === true)\n        {\n            console.log('submodules - map - panel is closing')\n            //closepanel();\n            // setTimeout(() => {        \n            //     changesubmodule(item.submodule, false)\n            // }, 500)\n        }\n    })\n\n    const handleCloseClick = (e) => {\n        console.log('param is: ' + e)\n        console.log('The link was clicked.');\n        // setOpenMenu(false)\n        // setCloseMenu(true)\n\n        //console.log(e.target.childNodes[0].data.toLowerCase())\n        //changesubmodule(e.target.childNodes[0].data.toLowerCase(), false)\n\n\n    //     const { currentnav } = useContext(NavContext)\n    // currentnav.map((navitem) => {\n    //     if(navitem.navname === \"about\"){\n    //         console.log('about - navitem navname is:' + navitem.navname)\n    //         console.log('about - navitem waittime is:' + navitem.waittime)\n    //     }\n    //     thedelay = navitem.waittime\n    //     console.log('about - thedelay is : ' + thedelay)\n    // })\n\n        // changenav(e.target.childNodes[0].data.toLowerCase(), waittime)\n\n    }\n\n    // function updateThatContext()\n    // {\n    //     console.log('updateThatcontext has been called ----------------- *')\n    // }\n\n    // useEffect(() => {\n\n    //     console.log('use effect - sub module container')\n    //     console.log('openMenu is: ' + openMenu)\n    //     if(openMenu === true){\n    //         console.log('use effect - sub module container - openMenu is true')\n    //         openpanel();\n    //         setCloseMenu(true)\n    //     }\n    //     else if(closeMenu === true)\n    //     {\n    //         console.log('use effect - sub module container - openMenu is false')\n    //         closepanel();\n    //         setOpenMenu(true)\n    //     }\n\n    //     console.log('submodules.submodules is: ' + submodules.submodules)\n    //     // if(item.isopen === false)\n    // //     {\n    // //         setOpenMenu(true)\n    // //     }\n        \n    //     // if(showSubModulePress === true){\n    //     //     console.log('press should be shown ----------!!!!!!!!<<<<<<')\n    //     // }\n    // }, [openMenu])\n\n    const svgVariants = {\n        ready: { opacity: 0 },\n        start: { opacity: 1, transition: { delay: props.delay, duration : props.duration }}\n    }\n    \n    return (\n\n        <div ref={scope}>\n\n            <motion.div \n                id=\"containerid\"\n                className={estyle.container} \n                style={{ height: \"137px\", y:0 }}\n                variants={svgVariants}\n                initial=\"ready\"\n                animate=\"start\"\n            >\n                \n                {showSubModulePress ?\n                <motion.div \n                    id=\"pressid\"\n                    style={{opacity:0}}\n                >\n                    <div \n                        className={estyle.closebutton} \n                        id=\"closeid\" \n                        style={{ opacity: 0 }} \n                        onClick={(e) => handleCloseClick(e)}\n                    >\n                        x\n                    </div>\n                    <SubModulePress props={{delay:0, duration:1}}/> \n                </motion.div>\n                :\n                <div></div>\n\n                }\n            </motion.div>\n        </div>\n    )\n}\nexport default SubModuleContainer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}