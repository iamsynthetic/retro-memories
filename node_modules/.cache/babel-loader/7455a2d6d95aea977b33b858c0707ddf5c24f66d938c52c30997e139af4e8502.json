{"ast":null,"code":"var _jsxFileName = \"/Users/tomo/Documents/code/projects/react/retro-memories/src/NavContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NavContext = /*#__PURE__*/createContext();\nexport function NavProvider({\n  children\n}) {\n  _s();\n  const [currentnav, setNav] = useState([{}]);\n  const [navlabels, setNavLabels] = useState([\"HOME\", \"ABOUT\", \"PROJECTS\", \"CLIENTS\", \"PARTNERS\", \"FUTURE\", \"CONTACT\"]);\n  const [submodules, setSubModules] = useState([]);\n  const [homepagevisible, setHomePageVisible] = useState([{\n    homepagevisible: true,\n    isfirsttime: true\n  }]);\n  const [deeplinkname, setDeepLinkName] = useState([{}]);\n  const changenav = (navname, waittime) => {\n    setNav(() => [{\n      navname: navname,\n      waittime: waittime\n    }]);\n  };\n  const changesubmodule = (submodule, yesopen, positionstate = 1) => {\n    setSubModules(() => [{\n      submodule: submodule,\n      yesopen: yesopen,\n      positionstate: positionstate\n    }]);\n  };\n  const changeHomePage = (homepagevisible, isfirsttime) => {\n    setHomePageVisible(() => [{\n      homepagevisible: homepagevisible,\n      isfirsttime: isfirsttime\n    }]);\n  };\n  const changeDeepLinkName = deeplinkname => {\n    setDeepLinkName(() => [{\n      deeplinkname: deeplinkname\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(NavContext.Provider, {\n    value: {\n      currentnav,\n      changenav,\n      navlabels,\n      setNavLabels,\n      submodules,\n      changesubmodule,\n      homepagevisible,\n      changeHomePage,\n      deeplinkname,\n      changeDeepLinkName\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(NavProvider, \"/8ozOnyOyBzocO1O32DuN41ffv0=\");\n_c = NavProvider;\nexport default NavContext;\n\n//nav context is like redux but in the opposite, you import this into whatever other component\n//you want to use this data.\n\n//right now the main nav calls changenav and sets the navname to whatever was clicked, and\n//also sets the waittime to whatever is set in mainnav\n\n//then the other 'sections' (components like about, projects etc) also import this component\n//and call the currentnav state to find out what it currently is, based off this they should\n//be able to wait for however long the waittime is until they animate in. that's the plan.\nvar _c;\n$RefreshReg$(_c, \"NavProvider\");","map":{"version":3,"names":["createContext","useState","jsxDEV","_jsxDEV","NavContext","NavProvider","children","_s","currentnav","setNav","navlabels","setNavLabels","submodules","setSubModules","homepagevisible","setHomePageVisible","isfirsttime","deeplinkname","setDeepLinkName","changenav","navname","waittime","changesubmodule","submodule","yesopen","positionstate","changeHomePage","changeDeepLinkName","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tomo/Documents/code/projects/react/retro-memories/src/NavContext.js"],"sourcesContent":["import { createContext, useState } from \"react\";\n\nconst NavContext = createContext();\n\nexport function NavProvider({children}){\n\n    const [currentnav, setNav] = useState([{}])\n    const [navlabels, setNavLabels] = useState([\"HOME\", \"ABOUT\", \"PROJECTS\", \"CLIENTS\", \"PARTNERS\", \"FUTURE\", \"CONTACT\"])\n    const [submodules, setSubModules] = useState([])\n    const [homepagevisible, setHomePageVisible] = useState([{homepagevisible:true, isfirsttime:true}])\n    const [deeplinkname, setDeepLinkName] = useState([{}])\n\n    const changenav = (navname, waittime) => {\n        setNav(() => [{navname:navname, waittime:waittime}])\n    }\n\n    const changesubmodule = (submodule, yesopen, positionstate=1) => {\n        setSubModules(() => [{submodule:submodule, yesopen:yesopen, positionstate:positionstate}])\n    }\n\n    const changeHomePage = (homepagevisible, isfirsttime) => {\n        setHomePageVisible(() => [{homepagevisible:homepagevisible, isfirsttime:isfirsttime}])\n    }\n    \n    const changeDeepLinkName = (deeplinkname) => {\n        setDeepLinkName(() => [{deeplinkname:deeplinkname}])\n    }\n\n    return(\n        <NavContext.Provider value={{\n            currentnav, changenav, \n            navlabels, setNavLabels, \n            submodules, changesubmodule, \n            homepagevisible, changeHomePage,\n            deeplinkname, changeDeepLinkName\n            }}\n        >\n            {children}\n        </NavContext.Provider>\n    )\n}\nexport default NavContext;\n\n\n//nav context is like redux but in the opposite, you import this into whatever other component\n//you want to use this data.\n\n//right now the main nav calls changenav and sets the navname to whatever was clicked, and\n//also sets the waittime to whatever is set in mainnav\n\n//then the other 'sections' (components like about, projects etc) also import this component\n//and call the currentnav state to find out what it currently is, based off this they should\n//be able to wait for however long the waittime is until they animate in. that's the plan."],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,UAAU,gBAAGJ,aAAa,CAAC,CAAC;AAElC,OAAO,SAASK,WAAWA,CAAC;EAACC;AAAQ,CAAC,EAAC;EAAAC,EAAA;EAEnC,MAAM,CAACC,UAAU,EAAEC,MAAM,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,CAAC,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;EACrH,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACa,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC,CAAC;IAACa,eAAe,EAAC,IAAI;IAAEE,WAAW,EAAC;EAAI,CAAC,CAAC,CAAC;EAClG,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAEtD,MAAMkB,SAAS,GAAGA,CAACC,OAAO,EAAEC,QAAQ,KAAK;IACrCZ,MAAM,CAAC,MAAM,CAAC;MAACW,OAAO,EAACA,OAAO;MAAEC,QAAQ,EAACA;IAAQ,CAAC,CAAC,CAAC;EACxD,CAAC;EAED,MAAMC,eAAe,GAAGA,CAACC,SAAS,EAAEC,OAAO,EAAEC,aAAa,GAAC,CAAC,KAAK;IAC7DZ,aAAa,CAAC,MAAM,CAAC;MAACU,SAAS,EAACA,SAAS;MAAEC,OAAO,EAACA,OAAO;MAAEC,aAAa,EAACA;IAAa,CAAC,CAAC,CAAC;EAC9F,CAAC;EAED,MAAMC,cAAc,GAAGA,CAACZ,eAAe,EAAEE,WAAW,KAAK;IACrDD,kBAAkB,CAAC,MAAM,CAAC;MAACD,eAAe,EAACA,eAAe;MAAEE,WAAW,EAACA;IAAW,CAAC,CAAC,CAAC;EAC1F,CAAC;EAED,MAAMW,kBAAkB,GAAIV,YAAY,IAAK;IACzCC,eAAe,CAAC,MAAM,CAAC;MAACD,YAAY,EAACA;IAAY,CAAC,CAAC,CAAC;EACxD,CAAC;EAED,oBACId,OAAA,CAACC,UAAU,CAACwB,QAAQ;IAACC,KAAK,EAAE;MACxBrB,UAAU;MAAEW,SAAS;MACrBT,SAAS;MAAEC,YAAY;MACvBC,UAAU;MAAEU,eAAe;MAC3BR,eAAe;MAAEY,cAAc;MAC/BT,YAAY;MAAEU;IACd,CAAE;IAAArB,QAAA,EAEDA;EAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAE9B;AAAC1B,EAAA,CApCeF,WAAW;AAAA6B,EAAA,GAAX7B,WAAW;AAqC3B,eAAeD,UAAU;;AAGzB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}